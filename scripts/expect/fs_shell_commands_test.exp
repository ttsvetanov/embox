#!/usr/bin/expect

source [file join [file dirname [info script]] framework/test_core.exp]

namespace import autotest::*

TEST_SUITE_SETUP

TEST_CASE_TARGET {Reject cd into file} {
	set TELNET_PROMPT ":/#"

	test_exec_embox_cmd "touch 1.txt\r"

	send "cd 1.txt\r"
	test_assert_regexp_equal "error" $TELNET_PROMPT

	test_exec_embox_cmd "rm 1.txt\r"

	return 0
}

TEST_CASE_TARGET {pwd should show correct directory} {
	set TELNET_PROMPT ":/#"

	send "cd /dev\r"
	test_assert_regexp_equal ":/dev#"

	send "pwd\r"
	test_assert_regexp_equal "/dev" ":/dev#"

	test_exec_embox_cmd "cd /\r"

	return 0
}

TEST_CASE_TARGET {Echo to regular file} {
	set TELNET_PROMPT ":/#"

	test_exec_embox_cmd "touch 1.txt\r"
	test_exec_embox_cmd "echo 0123456789 > 1.txt\r"

	send "cat 1.txt\r"
	test_assert_regexp_equal "0123456789" $TELNET_PROMPT

	test_exec_embox_cmd "rm 1.txt\r"

	return 0
}

# I don't know why, but sometimes this test is also failed.
TEST_CASE_DECLARE_FIXME {
TEST_CASE_TARGET {Echo multiple times to regular file} {
	set TELNET_PROMPT ":/#"

	test_exec_embox_cmd "touch 1.txt\r"
	for {set i 0} {$i < 1000} {incr i} {
		test_exec_embox_cmd "echo 0123456789 > 1.txt\r"
	}
	for {set i 0} {$i < 1000} {incr i} {
		send "cat 1.txt\r"
		test_assert_regexp_equal "0123456789" $TELNET_PROMPT
	}
	return 0
}
}

TEST_CASE_TARGET {dd if=/dev/zero of=1.txt count=1} {
	set TELNET_PROMPT ":/#"

	test_exec_embox_cmd "touch 1.txt\r"
	test_exec_embox_cmd "dd if=/dev/zero of=1.txt count=1\r"

	send "md5sum 1.txt\r"
	test_assert_regexp_equal "bf619eac0cdf3f68d496ea9344137e8b" $TELNET_PROMPT

	return 0
}

TEST_CASE_DECLARE_FIXME {
TEST_CASE_TARGET {cat 1.txt > 2.txt} {
	set TELNET_PROMPT ":/#"

	test_exec_embox_cmd "touch 1.txt\r"
	test_exec_embox_cmd "echo 0123456789 > 1.txt\r"
	send "cat 1.txt\r"
	test_assert_regexp_equal "0123456789" $TELNET_PROMPT

	test_exec_embox_cmd "touch 2.txt\r"
	test_exec_embox_cmd "cat 1.txt > 2.txt\r"
	send "cat 2.txt\r"
	test_assert_regexp_equal "0123456789" $TELNET_PROMPT

	test_exec_embox_cmd "rm 1.txt\r"
	test_exec_embox_cmd "rm 2.txt\r"

	return 0
}
}
